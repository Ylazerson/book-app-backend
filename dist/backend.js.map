{"version":3,"sources":["webpack:///webpack/bootstrap df489e3e3376fa06101a","webpack:///./src/main.js","webpack:///external \"express\"","webpack:///external \"compression\"","webpack:///external \"cors\"","webpack:///external \"body-parser\"","webpack:///external \"mssql\"","webpack:///./src/routes/authorRoutes.js","webpack:///./src/controllers/authorRootController.js","webpack:///./src/routes/bookRoutes.js","webpack:///./src/controllers/bookIdController.js","webpack:///./src/controllers/bookRootController.js","webpack:///./src/routes/courseRoutes.js","webpack:///./src/controllers/courseIdController.js","webpack:///./src/controllers/courseRootController.js","webpack:///external \"dotenv\""],"names":["config","app","use","set","process","env","PORT","sqlConfig","user","DB_USER","password","DB_PASS","server","DB_SERVER","database","options","encrypt","connect","err","console","log","urlencoded","extended","json","authorRouter","bookRouter","courseRouter","get","req","res","send","listen","sql","Router","authorRootController","route","ps","PreparedStatement","input","VarChar","prepare","execute","p_first_name","query","first_name","p_last_name","last_name","result","status","recordset","bookRootController","bookIdController","post","all","put","patch","delete","dlt","next","Int","id","params","length","book","request","Request","body","title","author","genre","read_flag","p_author","p_genre","p_read_flag","courseRootController","courseIdController","course","watch_url","author_id","category","p_title","p_author_id","p_category"],"mappings":"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","file":"backend.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap df489e3e3376fa06101a","// B''H //\n\n\n// -- ----------------------------------------------------------------------------\nimport express from 'express';\nimport compression from 'compression';\nimport cors from 'cors';\n\n// body-parser extracts the entire body portion of an incoming request stream and\n// exposes it on req.body as something easier to interface with.\nimport bodyParser from 'body-parser';\n\nimport sql from 'mssql';\n\nimport authorRoutes from './routes/authorRoutes';\nimport bookRoutes from './routes/bookRoutes';\nimport courseRoutes from './routes/courseRoutes';\n\nimport dotenv from 'dotenv';\n// -- ----------------------------------------------------------------------------\n\n\n// -- ----------------------------------------------------------------------------\n// https://github.com/motdotla/dotenv/blob/master/README.md\ndotenv.config();\n// -- ----------------------------------------------------------------------------\n\n\n// -- ----------------------------------------------------------------------------\n/* eslint-disable no-console */\nconst app = express();\napp.use(compression());\napp.use(cors());\napp.set('port', (process.env.PORT || 8000));\n// -- ----------------------------------------------------------------------------\n\n\n// -- ----------------------------------------------------------------------------\nconst sqlConfig = {\n    user    : process.env.DB_USER,\n    password: process.env.DB_PASS,\n    server  : process.env.DB_SERVER,\n    database: 'Books',\n\n    options: {\n        encrypt: true // Use this if you're on Windows Azure\n    }\n};\n\nsql.connect(sqlConfig, function (err) {\n    console.log(err);\n});\n// -- ----------------------------------------------------------------------------\n\n\n// -- ----------------------------------------------------------------------------\n// Configure body-parser to be linked with Express.\n// See: https://stackoverflow.com/questions/39870867/what-does-app-usebodyparser-json-do\napp.use(bodyParser.urlencoded({extended: true}));\napp.use(bodyParser.json());\n// -- ----------------------------------------------------------------------------\n\n\n// -- ----------------------------------------------------------------------------\nconst authorRouter = authorRoutes(sql);\nconst bookRouter = bookRoutes(sql);\nconst courseRouter = courseRoutes(sql);\n// -- ----------------------------------------------------------------------------\n\n\n// -- ----------------------------------------------------------------------------\napp.use('/api/authors', authorRouter);\napp.use('/api/books', bookRouter);\napp.use('/api/courses', courseRouter);\n// -- ----------------------------------------------------------------------------\n\n\n// -- ----------------------------------------------------------------------------\napp.get('/', function (req, res) {\n    res.send('Hello World Ya Mon!');\n});\n\napp.listen(app.get('port'), function (err) {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('App is running on ' + app.get('port'));\n    }\n});\n// -- ----------------------------------------------------------------------------\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"compression\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"compression\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"cors\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cors\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"mssql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mssql\"\n// module id = 5\n// module chunks = 0","// B''H //\n\n\nimport express from 'express';\nimport authorRootControllers from '../controllers/authorRootController';\n\nexport default function (sql) {\n\n    const authorRouter         = express.Router();\n    const authorRootController = authorRootControllers(sql);\n\n\n    // -- ----------------------------------------------------------------------------\n    authorRouter.route('/')\n        .get(authorRootController.get);\n    // -- ----------------------------------------------------------------------------\n\n\n    return authorRouter;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/authorRoutes.js","// B''H //\n\n\nexport default function (sql) {\n\n\n    // ---------------------------------------------------------\n    // localhost:8000/api/authors\n    // localhost:8000/api/authors?first_name=Rick\n    let get = function (req, res) {\n\n        const ps = new sql.PreparedStatement();\n\n        ps.input('p_first_name', sql.VarChar(100));\n        ps.input('p_last_name', sql.VarChar(100));\n\n        ps.prepare('select * from dbo.udf_get_authors(@p_first_name, @p_last_name)',\n            function (err) {\n                ps.execute({\n                        p_first_name: req.query.first_name,\n                        p_last_name : req.query.last_name\n                    },\n                    function (err, result) {\n                        if (err)\n                            res.status(500).send(err);\n                        else {\n                            res.send(result.recordset);\n                        }\n\n                    });\n            });\n\n\n    };\n    // ---------------------------------------------------------\n\n    return {\n        get: get\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/controllers/authorRootController.js","// B''H //\n\n\nimport express from 'express';\nimport bookIdControllers from '../controllers/bookIdController';\nimport bookRootControllers from '../controllers/bookRootController';\n\nexport default function (sql) {\n\n    const bookRouter = express.Router();\n    const bookRootController = bookRootControllers(sql);\n    const bookIdController   = bookIdControllers(sql);\n\n\n    // -- ----------------------------------------------------------------------------\n    // Install ExtensionJSONView Chrome plugin to see the JSON nicely\n    // Install Postman REST Client chrome plugin - Actually now a Chrome App\n    bookRouter.route('/')\n        .post(bookRootController.post)\n        .get(bookRootController.get);\n    // -- ----------------------------------------------------------------------------\n\n\n    // -- ----------------------------------------------------------------------------\n    // USE URL: http://localhost:8000/api/books/3\n    bookRouter.route('/:id')\n        .all(bookIdController.all)\n        .get(bookIdController.get)\n        .put(bookIdController.put)\n        .patch(bookIdController.patch)\n        .delete(bookIdController.dlt);\n    // -- ----------------------------------------------------------------------------\n\n    return bookRouter;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/bookRoutes.js","// B''H //\n\n\n\nexport default function (sql) {\n\n    // ---------------------------------------------------------\n    // .all is express middleware that'll run then pass onto get, put, patch, or delete\n    const all = function (req, res, next) {\n\n        // const id = req.params.id;\n        const ps = new sql.PreparedStatement();\n        ps.input('id', sql.Int);\n\n        ps.prepare('select * from books where id = @id',\n            function (err) {\n                ps.execute({\n                        id: req.params.id\n                    },\n                    function (err, result) {\n                        if (result.recordset.length === 0) {\n                            res.status(404).send('Not Found');\n                        } else {\n                            req.book = result.recordset[0];\n                            next();\n                        }\n\n                    });\n            });\n\n    };\n    // ---------------------------------------------------------\n\n\n\n    // ---------------------------------------------------------\n    //\n    let get = function (req, res) {\n        res.send(req.book);\n    };\n    // ---------------------------------------------------------\n\n\n\n\n    // ---------------------------------------------------------\n    // put = UPDATE all fields\n    let put = function (req, res) {\n\n        const request = new sql.Request();\n\n        // http://junerockwell.com/difference-parameters-query-strings-express-js/\n        request.input('p_id',        sql.VarChar(50), req.params.id);\n        request.input('p_title',     sql.VarChar(50), req.body.title);\n        request.input('p_author',    sql.VarChar(50), req.body.author);\n        request.input('p_genre',     sql.VarChar(50), req.body.genre);\n        request.input('p_read_flag', sql.Int,         req.body.read_flag);\n\n        request.execute('usp_update_book',\n            function (err, result) {\n\n                if (err)\n                    res.status(500).send(err);\n                else {\n                    res.send(result.recordset[0]);\n                }\n\n            });\n\n    };\n    // ---------------------------------------------------------\n\n\n    // ---------------------------------------------------------\n    // patch = UPDATE only fields passed in\n    let patch = function (req, res) {\n\n        const request = new sql.Request();\n\n        // http://junerockwell.com/difference-parameters-query-strings-express-js/\n        request.input('p_id',        sql.VarChar(50), req.params.id);\n        // ---    ---    ---    ---    ---    ---    ---    ---    ---    ---\n        request.input('p_title',     sql.VarChar(50), req.body.title);\n        request.input('p_author',    sql.VarChar(50), req.body.author);\n        request.input('p_genre',     sql.VarChar(50), req.body.genre);\n        request.input('p_read_flag', sql.Int,         req.body.read_flag);\n        // ---    ---    ---    ---    ---    ---    ---    ---    ---    ---\n        request.input('p_title_update',     sql.Int, req.body.title     ? 1 : 0);\n        request.input('p_author_update',    sql.Int, req.body.author    ? 1 : 0);\n        request.input('p_genre_update',     sql.Int, req.body.genre     ? 1 : 0);\n        request.input('p_read_flag_update', sql.Int, req.body.read_flag ? 1 : 0);\n\n        request.execute('usp_update_book',\n            function (err, result) {\n\n                if (err)\n                    res.status(500).send(err);\n                else {\n                    res.send(result.recordset[0]);\n                }\n\n            });\n\n    };\n    // ---------------------------------------------------------\n\n\n    // ---------------------------------------------------------\n    //\n    let dlt = function (req, res) {\n\n        const ps = new sql.PreparedStatement();\n        ps.input('id', sql.Int);\n\n        ps.prepare('delete from books where id = @id',\n            function (err) {\n                ps.execute({\n                        id: req.params.id\n                    },\n                    function (err) {\n                        if (err) {\n                            res.status(500).send(err);\n                        } else {\n                            res.status(204).send('Item deleted');\n                        }\n\n                    });\n            });\n\n    };\n    // ---------------------------------------------------------\n\n\n    return {\n        all   : all,\n        get   : get,\n        put   : put,\n        patch : patch,\n        dlt   : dlt\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/controllers/bookIdController.js","// B''H //\n\n\n\n\nexport default function (sql) {\n\n    // ---------------------------------------------------------\n    const post = function (req, res) {\n\n\n        if (!req.body.title) {\n            res.status(400);\n            res.send('Title is required');\n        }\n        else {\n\n            const request = new sql.Request();\n\n            request.input('p_title',     sql.VarChar(50), req.body.title);\n            request.input('p_author',    sql.VarChar(50), req.body.author);\n            request.input('p_genre',     sql.VarChar(50), req.body.genre);\n            request.input('p_read_flag', sql.Int,         req.body.read_flag);\n\n            request.execute('usp_insert_into_books',\n                function (err, result) {\n\n                    // console.log(result);\n\n                    if (err)\n                        res.status(500).send(err);\n                    else {\n                        res.status(201);\n                        res.send(result.recordset);\n                    }\n\n                });\n\n        }\n\n    };\n    // ---------------------------------------------------------\n\n\n    // ---------------------------------------------------------\n    // http://junerockwell.com/difference-parameters-query-strings-express-js/\n    //\n    // localhost:8000/api/books\n    // localhost:8000/api/books?genre=Science%20Fiction\n    // localhost:8000/api/books?genre=Fiction\n    // localhost:8000/api/books?genre=Fiction&read_flag=0\n    // localhost:8000/api/books?genre=Fiction&read_flag=0&author=Jerry%20Mongoose\n    // localhost:8000/api/books?read_flag=0\n    let get = function (req, res) {\n\n        /*\n        const p_author    = req.query.author;\n        const p_genre     = req.query.genre;\n        const p_read_flag = req.query.read_flag;\n        */\n\n        const ps = new sql.PreparedStatement();\n\n        ps.input('p_author',    sql.VarChar(50));\n        ps.input('p_genre',     sql.VarChar(50));\n        ps.input('p_read_flag', sql.Int);\n\n        ps.prepare('select * from dbo.udf_Get_Books(@p_author, @p_genre, @p_read_flag)',\n            function (err) {\n                ps.execute({\n                        p_author    : req.query.author,\n                        p_genre     : req.query.genre,\n                        p_read_flag : req.query.read_flag\n                    },\n                    function (err, result) {\n                        if (err)\n                            res.status(500).send(err);\n                        else {\n                            res.send(result.recordset);\n                        }\n\n                    });\n            });\n\n\n    };\n    // ---------------------------------------------------------\n\n    return {\n        post: post,\n        get : get\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/controllers/bookRootController.js","// B''H //\n\n\nimport express from 'express';\nimport courseIdControllers from '../controllers/courseIdController';\nimport courseRootControllers from '../controllers/courseRootController';\n\nexport default function (sql) {\n\n    const courseRouter         = express.Router();\n    const courseRootController = courseRootControllers(sql);\n    const courseIdController   = courseIdControllers(sql);\n\n\n    // -- ----------------------------------------------------------------------------\n    // Install ExtensionJSONView Chrome plugin to see the JSON nicely\n    // Install Postman REST Client chrome plugin - Actually now a Chrome App\n    courseRouter.route('/')\n        .post(courseRootController.post)\n        .get(courseRootController.get);\n    // -- ----------------------------------------------------------------------------\n\n\n    // -- ----------------------------------------------------------------------------\n    // USE URL: http://localhost:8000/api/courses/3\n    courseRouter.route('/:id')\n        .all(courseIdController.all)\n        .get(courseIdController.get)\n        .put(courseIdController.put)\n        .patch(courseIdController.patch)\n        .delete(courseIdController.dlt);\n    // -- ----------------------------------------------------------------------------\n\n    return courseRouter;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/courseRoutes.js","// B''H //\n\n\n\nexport default function (sql) {\n\n    // ---------------------------------------------------------\n    // .all is express middleware that'll run then pass onto get, put, patch, or delete\n    const all = function (req, res, next) {\n\n        // const id = req.params.id;\n        const ps = new sql.PreparedStatement();\n        ps.input('id', sql.Int);\n\n        ps.prepare('select * from courses where id = @id',\n            function (err) {\n                ps.execute({\n                        id: req.params.id\n                    },\n                    function (err, result) {\n                        if (result.recordset.length === 0) {\n                            res.status(404).send('Not Found');\n                        } else {\n                            req.course = result.recordset[0];\n                            next();\n                        }\n\n                    });\n            });\n\n    };\n    // ---------------------------------------------------------\n\n\n\n    // ---------------------------------------------------------\n    //\n    let get = function (req, res) {\n        res.send(req.course);\n    };\n    // ---------------------------------------------------------\n\n\n\n\n    // ---------------------------------------------------------\n    // put = UPDATE all fields\n    let put = function (req, res) {\n\n        const request = new sql.Request();\n\n        // http://junerockwell.com/difference-parameters-query-strings-express-js/\n        request.input('p_id',        sql.Int,          req.params.id);\n        request.input('p_title',     sql.VarChar(100), req.body.title);\n        request.input('p_watch_url', sql.VarChar(200), req.body.watch_url);\n        request.input('p_author_id', sql.Int,          req.body.author_id);\n        request.input('p_length',    sql.VarChar(50),  req.body.length);\n        request.input('p_category',  sql.VarChar(50),  req.body.category);\n\n        request.execute('usp_update_course',\n            function (err, result) {\n\n                if (err)\n                    res.status(500).send(err);\n                else {\n                    res.send(result.recordset[0]);\n                }\n\n            });\n\n    };\n    // ---------------------------------------------------------\n\n\n    // ---------------------------------------------------------\n    // patch = UPDATE only fields passed in\n    let patch = function (req, res) {\n\n        const request = new sql.Request();\n\n        // http://junerockwell.com/difference-parameters-query-strings-express-js/\n        request.input('p_id',        sql.Int,          req.params.id);\n        // ---    ---    ---    ---    ---    ---    ---    ---    ---    ---\n        request.input('p_title',     sql.VarChar(100), req.body.title);\n        request.input('p_watch_url', sql.VarChar(200), req.body.watch_url);\n        request.input('p_author_id', sql.Int,          req.body.author_id);\n        request.input('p_length',    sql.VarChar(50),  req.body.length);\n        request.input('p_category',  sql.VarChar(50),  req.body.category);\n        // ---    ---    ---    ---    ---    ---    ---    ---    ---    ---\n        request.input('p_title_update',     sql.Int, req.body.title     ? 1 : 0);\n        request.input('p_watch_url_update', sql.Int, req.body.watch_url ? 1 : 0);\n        request.input('p_author_id_update', sql.Int, req.body.author_id ? 1 : 0);\n        request.input('p_length_update',    sql.Int, req.body.length    ? 1 : 0);\n        request.input('p_category_update',  sql.Int, req.body.category  ? 1 : 0);\n\n        request.execute('usp_update_course',\n            function (err, result) {\n\n                if (err)\n                    res.status(500).send(err);\n                else {\n                    res.send(result.recordset[0]);\n                }\n\n            });\n\n    };\n    // ---------------------------------------------------------\n\n\n    // ---------------------------------------------------------\n    //\n    let dlt = function (req, res) {\n\n        const ps = new sql.PreparedStatement();\n        ps.input('id', sql.Int);\n\n        ps.prepare('delete from courses where id = @id',\n            function (err) {\n                ps.execute({\n                        id: req.params.id\n                    },\n                    function (err) {\n                        if (err) {\n                            res.status(500).send(err);\n                        } else {\n                            res.status(204).send('Item deleted');\n                        }\n\n                    });\n            });\n\n    };\n    // ---------------------------------------------------------\n\n\n    return {\n        all   : all,\n        get   : get,\n        put   : put,\n        patch : patch,\n        dlt   : dlt\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/controllers/courseIdController.js","// B''H //\n\n\nexport default function (sql) {\n\n    // ---------------------------------------------------------\n    const post = function (req, res) {\n\n\n        if (!req.body.title) {\n            res.status(400);\n            res.send('Title is required');\n        }\n        else {\n\n            const request = new sql.Request();\n\n            request.input('p_title', sql.VarChar(100), req.body.title);\n            request.input('p_watch_url', sql.VarChar(200), req.body.watch_url);\n            request.input('p_author_id', sql.Int, req.body.author_id);\n            request.input('p_length', sql.VarChar(50), req.body.length);\n            request.input('p_category', sql.VarChar(50), req.body.category);\n\n            request.execute('usp_insert_into_courses',\n                function (err, result) {\n\n                    // console.log(result);\n\n                    if (err)\n                        res.status(500).send(err);\n                    else {\n                        res.status(201);\n                        res.send(result.recordset);\n                    }\n\n                });\n\n        }\n\n    };\n    // ---------------------------------------------------------\n\n\n    // ---------------------------------------------------------\n    // http://junerockwell.com/difference-parameters-query-strings-express-js/\n    //\n    // localhost:8000/api/courses\n    // localhost:8000/api/courses?category=Science%20Fiction\n    let get = function (req, res) {\n\n        const ps = new sql.PreparedStatement();\n\n        ps.input('p_title',     sql.VarChar(100));\n        ps.input('p_author_id', sql.Int);\n        ps.input('p_category',  sql.VarChar(50));\n\n        ps.prepare('select * from dbo.udf_get_courses(@p_title, @p_author_id, @p_category)',\n            function (err) {\n                ps.execute({\n                        p_title    : req.query.title,\n                        p_author_id: req.query.author_id,\n                        p_category : req.query.category\n                    },\n                    function (err, result) {\n                        if (err)\n                            res.status(500).send(err);\n                        else {\n                            res.send(result.recordset);\n                        }\n\n                    });\n            });\n\n\n    };\n    // ---------------------------------------------------------\n\n    return {\n        post: post,\n        get : get\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/controllers/courseRootController.js","module.exports = require(\"dotenv\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"dotenv\"\n// module id = 14\n// module chunks = 0"],"sourceRoot":""}